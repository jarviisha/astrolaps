---
import SkillCard from "./blocks/SkillCard.astro";
---

<section id="skill" class="w-full pt-20 pb-32">
  <div class="container justify-center mx-auto h-full text-white">
    <!-- Header với GPU acceleration -->
    <div class="relative will-change-transform">
      <h1 class="text-9xl font-header transform-gpu">my-skills</h1>
    </div>
    
    <div class="grid grid-cols-12 gap-2 w-full">
      <!-- Backend Section với optimized images -->
      <div class="flex gap-8 relative justify-end col-start-5 col-end-13">
        <!-- Optimized background image container -->
        <div class="h-[800px] -z-10 w-[640px] absolute -top-20 -right-44 overflow-hidden">
          <img 
            src="/banhrang.jpeg" 
            alt="Backend development background" 
            class="h-full w-full object-cover transform-gpu" 
            loading="lazy"
            decoding="async"
            width="640"
            height="800"
          />
          <div class="absolute top-0 bg-black/60 w-full h-full pointer-events-none"></div>
        </div>
        
        <div class="p-4 will-change-transform">
          <h2 class="text-4xl mb-4 font-bold">BACKEND DEVELOPER</h2>
          <p class="mb-6">
            I specialize in backend development with a strong focus on
            performance, scalability, and clean architecture. My primary stack
            includes
          </p>
          
          <!-- Optimized grid layout -->
          <div class="flex gap-12">
            <div class="flex-1">
              <div>
                <h3 class="text-xl font-code font-bold">
                  #LANGUAGES AND FRAMEWORKS
                </h3>
                <SkillCard
                  icons={["/icons/golang.svg"]}
                  title="Golang"
                  content="High-performance APIs, concurrency, gRPC services"
                />
                <SkillCard
                  icons={["/icons/dotnet.svg", "/icons/csharp.svg"]}
                  title=".NET with C#"
                  content="RESTful APIs, business logic layers, Entity Framework"
                />
              </div>
            </div>
            
            <div class="flex-1">
              <div>
                <span class="text-xl font-bold font-code">#DATABASE</span>
                <SkillCard
                  icons={["/icons/sqlserver.svg", "/icons/pgsql.svg"]}
                  title="SQLServer & PostgreSQL"
                  content="Relational schema design, stored procedures, query optimization, indexing"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Frontend Section với optimized layout -->
      <div class="flex gap-8 relative col-span-12 mt-36">
        <div class="p-4 w-full will-change-transform">
          <!-- Optimized background image container -->
          <div class="-z-10 h-[800px] w-[800px] absolute -top-20 -left-44 overflow-hidden">
            <img 
              src="/tower.jpeg" 
              alt="Frontend development background" 
              class="h-auto w-full object-cover transform-gpu" 
              loading="lazy"
              decoding="async"
            />
            <div class="absolute top-0 bg-black/70 w-full h-full pointer-events-none"></div>
          </div>
          
          <h2 class="text-4xl mb-4 font-bold">FRONTEND DEVELOPER</h2>
          <p class="mb-6">
            I create modern, responsive, and accessible user interfaces with a focus on
            performance and user experience. My frontend expertise includes
          </p>
          
          <div class="flex gap-12">
            <div class="w-2/3">
              <div>
                <span class="text-xl font-code font-bold">
                  #LANGUAGES AND FRAMEWORKS
                </span>
                <SkillCard
                  icons={[
                    "/icons/html-5.svg",
                    "/icons/css-3.svg",
                    "/icons/javascript.svg",
                  ]}
                  title="HTML | CSS | JavaScript"
                  content="I'm comfortable working with HTML5, CSS3, and Vanilla JavaScript to create responsive, accessible, and user-friendly interfaces. I understand core frontend principles such as DOM manipulation, responsive layouts (Flexbox/Grid), and API integration."
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* GPU acceleration cho better performance */
  #skill {
    will-change: transform;
    transform: translateZ(0);
    contain: layout style paint;
  }
  
  /* Optimize font rendering */
  .font-header, .font-code {
    font-display: swap;
    text-rendering: optimizeLegibility;
  }
  
  /* Prevent layout shifts */
  img {
    content-visibility: auto;
    contain-intrinsic-size: 640px 800px;
  }
  
  /* Optimize transforms */
  .transform-gpu {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
  }
  
  /* Responsive optimizations */
  @media (max-width: 768px) {
    .text-9xl {
      font-size: 4rem;
    }
    
    .text-4xl {
      font-size: 1.875rem;
    }
    
    .gap-12 {
      gap: 1.5rem;
    }
    
    .h-\[800px\] {
      height: 400px;
    }
    
    .h-\[400px\] {
      height: 300px;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
    
    .flex {
      flex-direction: column;
    }
    
    .w-2\/3 {
      width: 100%;
    }
  }
</style>

<script type="module">
  // Intersection Observer cho lazy loading và animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-in');
        // Unobserve sau khi animated để tối ưu performance
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  // Observe skill cards với throttling
  document.addEventListener('DOMContentLoaded', () => {
    const skillCards = document.querySelectorAll('#skill [class*="col-"]');
    skillCards.forEach(card => observer.observe(card));
  });
  
  // Cleanup observer when page unloads
  window.addEventListener('beforeunload', () => {
    observer.disconnect();
  });
</script>
